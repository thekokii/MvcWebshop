@model MvcWebshop.WebUI.Entities.BeerReview
@*model MvcWebshop.WebUI.Models.BeerReviewCreateViewModel*@

@{
    ViewBag.Title = "Edit";
}

<h2>Edit your review for</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h3>@ViewBag.ProductId</h3>*@
        <h3>@Model.BeerProduct.Name</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReviewId)
        @Html.HiddenFor(model => model.UserInfoId)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @*@Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @Html.Hidden("ProductId", (object)ViewBag.ProductId)
                        @*@ViewBag.ProductId*@ @*@ViewBag.ProductName*@
                        @*@Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })*@
                        @*@Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Aroma, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Aroma, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Aroma, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Aroma, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Appearance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Aroma, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Appearance, Enumerable.Range(1, 5).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Appearance, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Taste, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Aroma, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Taste, Enumerable.Range(1, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Taste, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Palate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Aroma, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Palate, Enumerable.Range(1, 5).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Palate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Overall, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Aroma, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Overall, Enumerable.Range(1, 20).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Overall, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Text, new { @class = "form-control", @style = "width:100%" })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
                        <input type="submit" value="Update" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                @Html.Partial("ReviewAssistancePartial")

            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
        <a class="btn btn-primary" href="@ViewBag.ReturnUrl">Cancel</a>
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $(".assist-btn").click(function () {
                //alert();
                $(".assist").hide();
                $(".assist." + $(this).attr("assist-type")).show();
            });
        });
    </script>
}
